
input[type="checkbox"] {
  // Remove the input from the document flow and hide it
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;

  & + label,
  & + .label {
    // Override TWBS
    font-weight: normal;
    padding-left: 0;
  }

  // Adjacent labels will construct a custom input using the content property
  & + label:before,
  & + .label:before {
    content: "";
    display: inline-block;
    background-color: transparent;
    vertical-align: middle;
    padding-right: $checkbox-label-padding; // By default, checkboxes want space between it and its label
    box-sizing: content-box;
    @include svg("checkbox-deselect-default", 12px, 12px);
  }
}

input[type="checkbox"] {
  // The cascade order matters here: Disabled > Active > Hover > Focus > Default
  &:focus + label:before,
  &:focus + .label:before {
    @include svg("checkbox-deselect-focus", 12px, 12px);
  }
  &:hover + label:before,
  &:hover + .label:before {
    @include svg("checkbox-deselect-hover", 12px, 12px);
  }
  &:active + label:before,
  &:active + .label:before {
    @include svg("checkbox-deselect-down", 12px, 12px);
  }
  &:disabled + label:before,
  &:disabled + .label:before {
    @include svg("checkbox-deselect-disable", 12px, 12px);
  }

  // The states for a checked checkbox
  &:checked {
    // The cascade order matters here: Disabled > Active > Hover > Focus > Default
    & + label:before,
    & + .label:before {
      @include svg("checkbox-default", 12px, 12px);
    }
    &:focus + label:before,
    &:focus + .label:before {
      @include svg("checkbox-focus", 12px, 12px);
    }
    &:hover + label:before,
    &:hover + .label:before {
      @include svg("checkbox-hover", 12px, 12px);
    }
    &:active + label:before,
    &:active + .label:before {
      @include svg("checkbox-down", 12px, 12px);
    }
    &:disabled + label:before,
    &:disabled + .label:before {
      @include svg("checkbox-disable", 12px, 12px);
    }
  }
  
  
}

.checkbox-inline {
  padding-left: 0px;
}