{
  "env": {
    "browser": true,
    "node": true
  },

  "rules": {

    // style rules
    "indent" : [2, 2],  // warning or error?
    "brace-style": [2, "1tbs"],
    "eol-last": 0,
    "max-nested-callbacks": [1, 3],
    "new-cap": [2, { "newIsCap": true, "capIsNew": false } ], // default is both true, maybe we want that too?
    "new-parens": 2,
    "quotes": [1, "single"],
    "newline-after-var": 0, // can this be a warning with always?
    "no-array-constructor": 2,
    "no-lonely-if": 2,
    "no-multiple-empty-lines": [1, { "max": 2 } ],
    "no-nested-ternary": 2,
    "no-new-object": 2,
    "no-spaced-func": 2,
    "no-trailing-spaces": 2,
    "no-underscore-dangle": 2,
    "no-wrap-func": 2,
    "quote-props": [2, "as-needed"],
    "space-return-throw-case": 2,
    "space-unary-ops": [1, { "words": true, "nonwords": false }],
    "spaced-line-comment": 0,

    // legacy
    "max-len": [1, 80, 2],

    // possible errors
    "no-console": 1,
    "no-debugger": 1,
    "no-alert": 1,
    "no-constant-condition": 2,
    "no-control-regex": 2,  // invisible characters cause errors
    "no-dupe-keys": 2,
    "no-empty": 1,
    "no-empty-class": 1,
    "no-ex-assign": 2,
    "no-extra-parens": 1,
    "no-extra-semi": 1,
    "no-func-assign": 2,
    "no-invalid-regexp": 1,
    "no-obj-calls": 2,  // no Math() or JSON() calls
    "no-sparse-arrays": 2,
    "no-unreachable": 2,
    "use-isnan": 2,
    "valid-jsdoc": [1, { "requireReturn": false } ],

    // best practices
    "block-scoped-var": 2,
    "consistent-return": 2,
    "default-case": 1,
    "eqeqeq": [2, "smart"],
    "guard-for-in": 2,
    "no-caller": 2,
    "no-eval": 2,
    "no-labels": 2,

    // variables
    "no-delete-var": 2,
    "no-shadow": 2,
    "no-shadow-restricted-names": 2,
    "no-undef-init": 2,
    "no-undefined": 2,
    "no-unused-vars": [1, { "vars": "all", "args": "after-used" } ],
    "no-use-before-define": 2,


    // strict
    "strict": [2, "global"] // browserified environment allows for this

  }
}